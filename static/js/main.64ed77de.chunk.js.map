{"version":3,"sources":["constants.js","components/EmojiButton.js","components/Controls.js","components/Animal.js","components/Stage.js","utils.js","components/Background.js","components/Game.js","serviceWorker.js","index.js"],"names":["DEFAULT_SPEED","EmojiButton","Object","index_esm","target","FONT_SIZE","Container","Score","BUTTON_PADDING","Speed","props","isPlaying","SpeedButton","Range","Controls","handleSetSpeed","e","_this","setSpeed","value","_this2","this","react_default","a","createElement","onClick","togglePlay","tabIndex","type","min","max","step","speed","onChange","score","toLocaleString","Component","fall","FallingAnimal","xPosition","duration","rotateCounterClockWise","rotatateClockWise","RotatingAnimal","size","concat","clockWise","RemoveableAnimal","status","Animal","state","isRescued","handleClick","setState","points","handleRemove","remove","id","onAnimationEnd","fallDuration","rotationDuration","rotateClockWise","Transition_default","timeout","in","onExited","PureComponent","createRandomAnimal","Math","random","ceil","pointsToSize","window","innerHeight","Stage","secondsPlayed","animals","handleScore","incrementScore","filter","animal","tick","toConsumableArray","objectSpread","setInterval","clearInterval","Stage_Container","map","Animal_Animal","assign","key","shared","Cloud","top","left","rotate","Sun","Clouds","Array","fill","cloud","i","Background","React","memo","Background_Clouds","Game","handleTogglePlay","Game_Container","components_Background","Stage_Stage","Controls_Controls","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","Game_Game","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.64ed77de.chunk.js","sourcesContent":["export const SPACING = 4;\nexport const FONT_SIZE = 6;\nexport const BUTTON_PADDING = 3;\n\nexport const MIN_SPEED = 10;\nexport const MAX_SPEED = 100;\nexport const DEFAULT_SPEED = (MIN_SPEED + MAX_SPEED) / 2;\n","import styled from 'react-emotion/macro';\n\nimport { SPACING, FONT_SIZE, BUTTON_PADDING } from '../constants';\n\nlet size = (BUTTON_PADDING * 2 + FONT_SIZE) * SPACING;\n\nexport default styled.button`\n  border: none;\n  background: none;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: ${size}px;\n  height: ${size}px;\n  font-size: ${FONT_SIZE * SPACING}px;\n  line-height: 1;\n  cursor: pointer;\n  transition: 0.05s transform ease-in-out;\n\n  :active {\n    transform: scale(0.8);\n  }\n`;\n","import React, { Component } from 'react';\nimport styled from 'react-emotion/macro';\n\nimport EmojiButton from './EmojiButton';\nimport {\n  SPACING,\n  FONT_SIZE,\n  BUTTON_PADDING,\n  MIN_SPEED,\n  MAX_SPEED\n} from '../constants';\n\nlet Container = styled.div`\n  position: absolute;\n  overflow: hidden;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  background-color: rgba(255, 255, 255, 0.75);\n`;\n\nlet Score = styled.div`\n  font-size: ${FONT_SIZE * SPACING}px;\n  padding: 0 ${BUTTON_PADDING * SPACING}px;\n`;\n\nlet Speed = styled.div`\n  flex-grow: 1;\n  display: flex;\n  transition: 0.3s cubic-bezier(0.17, 0.89, 0.32, 1.28);\n  transform: translateY(${props => (props.isPlaying ? 100 : 0)}%);\n`;\n\nlet SpeedButton = styled(EmojiButton)`\n  flex-shrink: 0;\n`;\n\nlet Range = styled.input`\n  width: 100%;\n`;\n\nexport default class Controls extends Component {\n  handleSetSpeed = e => {\n    this.props.setSpeed(e.target.value);\n  };\n\n  render() {\n    return (\n      <Container>\n        <EmojiButton onClick={this.props.togglePlay}>\n          {this.props.isPlaying ? '⏸' : '▶️'}\n        </EmojiButton>\n\n        <Speed isPlaying={this.props.isPlaying}>\n          <SpeedButton\n            onClick={() => this.props.setSpeed(MIN_SPEED)}\n            tabIndex={this.props.isPlaying ? -1 : 0}\n          >\n            🐢\n          </SpeedButton>\n          <Range\n            type=\"range\"\n            min={MIN_SPEED}\n            max={MAX_SPEED}\n            step=\"5\"\n            value={this.props.speed}\n            onChange={this.handleSetSpeed}\n            tabIndex={this.props.isPlaying ? -1 : 0}\n          />\n          <SpeedButton\n            onClick={() => this.props.setSpeed(MAX_SPEED)}\n            tabIndex={this.props.isPlaying ? -1 : 0}\n          >\n            🐇\n          </SpeedButton>\n        </Speed>\n\n        {!!this.props.score && (\n          <Score>{this.props.score.toLocaleString()}</Score>\n        )}\n      </Container>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport styled, { keyframes } from 'react-emotion/macro';\nimport Transition from 'react-transition-group/Transition';\n\nconst ANIMAL_EXIT_DURATION = 200;\n\nlet fall = keyframes`\n  from { transform: translateY(0) }\n  to { transform: translateY(calc(100vh + 100px)) }\n`;\n\nlet FallingAnimal = styled.div`\n  display: inline-block;\n  position: absolute;\n  left: ${props => props.xPosition}%;\n  top: 0;\n  animation: ${fall} ${props => props.duration}s linear forwards;\n  animation-play-state: ${props => (props.isPlaying ? 'running' : 'paused')};\n  cursor: ${props => (props.isPlaying ? 'grab' : 'not-allowed')};\n\n  :active {\n    cursor: ${props => (props.isPlaying ? 'grabbing' : 'not-allowed')};\n  }\n`;\n\nlet rotateCounterClockWise = keyframes`\n  from { transform: rotate(0deg) }\n  to { transform: rotate(-360deg) }\n`;\n\nlet rotatateClockWise = keyframes`\n  from { transform: rotate(0deg) }\n  to { transform: rotate(360deg) }\n`;\n\nlet RotatingAnimal = styled.div`\n  position: absolute;\n  bottom: 0;\n  font-size: ${props => props.size}px;\n  animation: ${props => `\n    ${props.clockWise ? rotatateClockWise : rotateCounterClockWise}\n    ${props.duration}s linear infinite\n  `};\n`;\n\nlet RemoveableAnimal = styled.div`\n  transition-property: transform, opacity;\n  transition-duration: ${ANIMAL_EXIT_DURATION}ms;\n  transition-timing-function: ease-in;\n  transform: scale(${props => (props.status === 'exiting' ? 3 : 1)});\n  opacity: ${props => (props.status === 'exiting' ? 0 : 1)};\n`;\n\nexport default class Animal extends PureComponent {\n  state = { isRescued: false };\n\n  handleClick = () => {\n    if (!this.props.isPlaying) return;\n    this.setState({ isRescued: true });\n    this.props.score(this.props.points);\n  };\n\n  handleRemove = () => {\n    this.props.remove(this.props.id);\n  };\n\n  render() {\n    // This is way too many nested divs! But it's a good way to compose multiple transforms on the same visual element.\n    return (\n      <FallingAnimal\n        onClick={this.handleClick}\n        onAnimationEnd={this.handleRemove}\n        isPlaying={this.props.isPlaying}\n        xPosition={this.props.xPosition}\n        duration={this.props.fallDuration}\n      >\n        <RotatingAnimal\n          duration={this.props.rotationDuration}\n          clockWise={this.props.rotateClockWise}\n          size={this.props.size}\n        >\n          <Transition\n            timeout={ANIMAL_EXIT_DURATION}\n            in={!this.state.isRescued}\n            onExited={this.handleRemove}\n          >\n            {status => (\n              <RemoveableAnimal status={status}>\n                {this.props.type}\n              </RemoveableAnimal>\n            )}\n          </Transition>\n        </RotatingAnimal>\n      </FallingAnimal>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled from 'react-emotion/macro';\n\nimport Animal from './Animal';\nimport { pointsToSize, speedToDuration } from '../utils';\n\nlet Container = styled.div`\n  height: 100%;\n  margin-right: 100px;\n  position: relative;\n  user-select: none;\n`;\n\nlet createRandomAnimal = props => {\n  let type = Math.random() >= 0.5 ? '🐕' : '🐈';\n  let rotationDuration = Math.random() * 50 + 5;\n  let rotateClockWise = Math.random() >= 0.5;\n  let points = Math.ceil(Math.random() * 10);\n  let xPosition = Math.random() * 100;\n  let size = pointsToSize(points);\n  let fallDuration = speedToDuration(props.speed, window.innerHeight + 100);\n\n  return {\n    type,\n    rotationDuration,\n    rotateClockWise,\n    points,\n    xPosition,\n    size,\n    fallDuration\n  };\n};\n\nexport default class Stage extends Component {\n  state = {\n    secondsPlayed: 0,\n    animals: []\n  };\n\n  componentDidMount() {\n    window.setInterval(this.tick, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.tick);\n  }\n\n  handleScore = points => {\n    this.props.incrementScore(points);\n  };\n\n  handleRemove = id => {\n    this.setState(state => ({\n      animals: state.animals.filter(animal => animal.id !== id)\n    }));\n  };\n\n  tick = () => {\n    if (!this.props.isPlaying) return;\n\n    this.setState(state => ({\n      secondsPlayed: ++state.secondsPlayed,\n      animals: [\n        ...state.animals,\n        { id: state.secondsPlayed, ...createRandomAnimal(this.props) }\n      ]\n    }));\n  };\n\n  render() {\n    return (\n      <Container isPlaying={this.props.isPlaying}>\n        {this.state.animals.map(animal => (\n          <Animal\n            isPlaying={this.props.isPlaying}\n            speed={this.props.speed}\n            id={animal.id}\n            key={animal.id}\n            score={this.handleScore}\n            remove={this.handleRemove}\n            {...animal}\n          />\n        ))}\n      </Container>\n    );\n  }\n}\n","let pointsToSize = points => 100 - points * 10 + 10;\nlet speedToDuration = (speed, distance) => distance / speed;\n\nexport { pointsToSize, speedToDuration };\n","import React from 'react';\nimport styled, { keyframes } from 'react-emotion/macro';\n\nlet shared = `\n  font-size: 75px;\n  user-select: none;\n  position: absolute;\n`;\n\nlet Cloud = styled.div`\n  ${shared}\n  top: ${props => props.top}%;\n  left: ${props => props.left}%;\n`;\n\nlet rotate = keyframes`\n  from { transform: rotate(0deg) }\n  to { transform: rotate(360deg) }\n`;\n\nlet Sun = styled.div`\n  ${shared}\n  top: 5vw;\n  right: 5vw;\n  animation: ${rotate} 60s linear infinite;\n`;\n\nlet Clouds = () => {\n  return new Array(Math.ceil(Math.random() * 5)).fill(null).map((cloud, i) => (\n    <Cloud key={i} top={Math.random() * 100} left={Math.random() * 100}>\n      ☁️\n    </Cloud>\n  ));\n};\n\nlet Background = React.memo(() => (\n  <div>\n    <Sun>☀️</Sun>\n    <Clouds />\n  </div>\n));\n\nexport default Background;\n","import React, { Component } from 'react';\nimport styled from 'react-emotion/macro';\n\nimport Controls from './Controls';\nimport Stage from './Stage';\nimport Background from './Background';\nimport { DEFAULT_SPEED } from '../constants';\n\nlet Container = styled.div`\n  height: 100%;\n  background: linear-gradient(to bottom, #2980b9, #6dd5fa, #ffffff);\n`;\n\nexport default class Game extends Component {\n  state = {\n    isPlaying: false,\n    speed: DEFAULT_SPEED,\n    score: 0\n  };\n\n  handleTogglePlay = () => {\n    this.setState(state => ({ isPlaying: !state.isPlaying }));\n  };\n\n  handleSetSpeed = speed => {\n    this.setState({ speed });\n  };\n\n  incrementScore = points => {\n    this.setState(state => ({ score: state.score + points }));\n  };\n\n  render() {\n    return (\n      <Container>\n        <Background />\n        <Stage\n          isPlaying={this.state.isPlaying}\n          speed={this.state.speed}\n          incrementScore={this.incrementScore}\n        />\n        <Controls\n          isPlaying={this.state.isPlaying}\n          togglePlay={this.handleTogglePlay}\n          speed={this.state.speed}\n          setSpeed={this.handleSetSpeed}\n          score={this.state.score}\n        />\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/Game';\nimport './global.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}