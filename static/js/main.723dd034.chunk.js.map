{"version":3,"sources":["constants.js","components/EmojiButton.js","components/Controls.js","components/Animal.js","components/Stage.js","utils.js","components/Background.js","components/Game.js","serviceWorker.js","index.js"],"names":["DEFAULT_SPEED","EmojiButton","Object","index_esm","target","SPACING","Container","Score","Speed","props","isPlaying","SpeedButton","Range","Controls","handleSetSpeed","e","_this","setSpeed","value","_this2","this","react_default","a","createElement","onClick","togglePlay","type","min","max","step","speed","onChange","score","Component","fall","FallingAnimal","xPosition","duration","rotateCounterClockWise","rotatateClockWise","RotatingAnimal","size","clockWise","RemoveableAnimal","status","Animal","state","isRescued","handleClick","setState","handleExited","rescue","id","points","handleOffScreen","remove","onAnimationEnd","fallDuration","rotationDuration","rotateClockWise","Transition_default","timeout","in","onExited","PureComponent","createRandomAnimal","Math","random","ceil","pointsToSize","window","innerHeight","Stage","secondsPlayed","animals","handleRescue","incrementScore","handleRemove","filter","animal","tick","toConsumableArray","concat","objectSpread","setInterval","clearInterval","Stage_Container","map","Animal_Animal","assign","key","Cloud","top","left","Sun","Clouds","Array","fill","cloud","i","Background","React","memo","Background_Clouds","Game","handleTogglePlay","Game_Container","components_Background","Stage_Stage","Controls_Controls","Boolean","location","hostname","match","ReactDOM","render","Game_Game","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.723dd034.chunk.js","sourcesContent":["export const SPACING = 4;\n\nexport const MIN_SPEED = 10;\nexport const MAX_SPEED = 100;\nexport const DEFAULT_SPEED = (MIN_SPEED + MAX_SPEED) / 2;\n","import styled from 'react-emotion/macro';\n\nimport { SPACING } from '../constants';\n\nlet buttonPadding = 4;\nlet emojiSize = 8;\n\nexport default styled.button`\n  border: none;\n  background: none;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: ${SPACING * (emojiSize + buttonPadding)}px;\n  height: ${SPACING * (emojiSize + buttonPadding)}px;\n  font-size: ${SPACING * emojiSize}px;\n  line-height: 1;\n  cursor: pointer;\n  transition: .1s ease-in-out;\n\n  :hover {\n    transform: scale(1.2);\n  }\n\n  :touch {\n    transform: scale(.8);\n  }\n`;","import React, { Component } from 'react';\nimport styled from 'react-emotion/macro';\n\nimport EmojiButton from './EmojiButton';\nimport { SPACING, MIN_SPEED, MAX_SPEED } from '../constants';\n\nlet Container = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  border-top: 1px solid rgba(0,0,0,.1);\n  background-color: rgba(255,255,255, .75);\n`;\n\nlet Score = styled.div`\n  font-size: ${SPACING * 6}px;\n  padding: ${SPACING * 2}px;\n`;\n\nlet Speed = styled.div`\n  padding: 0 ${SPACING * 4}px;\n  flex-grow: 1;\n  display: flex;\n  transition: .3s cubic-bezier(.17,.89,.32,1.28);\n  transform: translateY(${props => props.isPlaying ? 100 : 0}%);\n`;\n\nlet SpeedButton = styled(EmojiButton)`\n  flex-shrink: 0;\n`;\n\nlet Range = styled.input`\n  width: 100%;\n`;\n\nexport default class Controls extends Component {\n\n  handleSetSpeed = e => {\n    this.props.setSpeed(e.target.value);\n  };\n\n  render() {\n    return (\n      <Container>\n         <EmojiButton onClick={this.props.togglePlay}>\n          {this.props.isPlaying ? '⏸' : '▶️'}\n        </EmojiButton>\n\n        <Speed isPlaying={this.props.isPlaying}>\n          <SpeedButton onClick={() => this.props.setSpeed(MIN_SPEED)}>🐢</SpeedButton>\n          <Range\n            type=\"range\"\n            min={MIN_SPEED}\n            max={MAX_SPEED}\n            step=\"5\"\n            value={this.props.speed}\n            onChange={this.handleSetSpeed}\n          />\n          <SpeedButton onClick={() => this.props.setSpeed(MAX_SPEED)}>🐇</SpeedButton>\n        </Speed>\n\n        <Score>{this.props.score}</Score>\n      </Container>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport styled, { keyframes } from 'react-emotion/macro';\nimport Transition from 'react-transition-group/Transition';\n\nconst ANIMAL_EXIT_DURATION = 200;\n\nlet fall = keyframes`\n  from { transform: translateY(0) }\n  to { transform: translateY(calc(100vh + 100px)) }\n`;\n\nlet FallingAnimal = styled.div`\n  display: inline-block;\n  position: absolute;\n  left: ${props => props.xPosition}%;\n  top: 0;\n  animation: ${fall} ${props => props.duration}s linear forwards;\n  animation-play-state: ${props => props.isPlaying ? 'running' : 'paused'};\n  cursor: ${props => props.isPlaying ? 'grab' : 'not-allowed'};\n\n  :active {\n    cursor: ${props => props.isPlaying ? 'grabbing' : 'not-allowed'};\n  }\n`;\n\nlet rotateCounterClockWise = keyframes`\n  from { transform: rotate(0deg) }\n  to { transform: rotate(-360deg) }\n`;\n\nlet rotatateClockWise = keyframes`\n  from { transform: rotate(0deg) }\n  to { transform: rotate(360deg) }\n`;\n\nlet RotatingAnimal = styled.div`\n  position: absolute;\n  bottom: 0;\n  font-size: ${props => props.size}px;\n  animation: ${props => props.clockWise ? rotatateClockWise : rotateCounterClockWise} ${props => props.duration}s linear infinite;\n`;\n\nlet RemoveableAnimal = styled.div`\n  transition-property: transform, opacity;\n  transition-duration: ${ANIMAL_EXIT_DURATION}ms;\n  transition-timing-function: ease-in;\n  transform: scale(${props => props.status === 'exiting' ? 3 : 1});\n  opacity: ${props => props.status === 'exiting' ? 0 : 1};\n`;\n\nexport default class Animal extends PureComponent {\n  state = { isRescued: false };\n\n  handleClick = () => {\n    if(!this.props.isPlaying) return;\n    this.setState({ isRescued: true });\n  }\n\n  handleExited = () => {\n    this.props.rescue(this.props.id, this.props.points);\n  }\n\n  handleOffScreen = () => {\n    this.props.remove(this.props.id);\n  }\n\n  render() {\n    // This is way too many nested divs! But it's a good way to compose multiple transforms on the same visual element.\n    return (\n      <FallingAnimal\n        onClick={this.handleClick}\n        onAnimationEnd={this.handleOffScreen}\n        isPlaying={this.props.isPlaying}\n        xPosition={this.props.xPosition}\n        duration={this.props.fallDuration}\n      >\n        <RotatingAnimal\n          duration={this.props.rotationDuration}\n          clockWise={this.props.rotateClockWise}\n          size={this.props.size}\n        >\n          <Transition timeout={ANIMAL_EXIT_DURATION} in={!this.state.isRescued} onExited={this.handleExited}>\n            {status => <RemoveableAnimal status={status}>{this.props.type}</RemoveableAnimal>}\n          </Transition>\n        </RotatingAnimal>\n      </FallingAnimal>\n    );\n  }\n}","import React, { Component } from 'react';\nimport styled from 'react-emotion/macro';\n\nimport Animal from './Animal';\nimport { pointsToSize, speedToDuration } from '../utils';\n\nlet Container = styled.div`\n  height: 100%;\n  margin-right: 100px;\n  position: relative;\n  user-select: none;\n`;\n\nlet createRandomAnimal = (props) => {\n  let type = Math.random() >= .5 ? '🐕' : '🐈';\n  let rotationDuration = (Math.random() * 50) + 5;\n  let rotateClockWise = Math.random() >= .5;\n  let points = Math.ceil(Math.random() * 10);\n  let xPosition = Math.random() * 100;\n  let size = pointsToSize(points);\n  let fallDuration = speedToDuration(props.speed, window.innerHeight + 100);\n\n  return {\n    type,\n    rotationDuration,\n    rotateClockWise,\n    points,\n    xPosition,\n    size,\n    fallDuration\n  };\n}\n\nexport default class Stage extends Component {\n  state = { \n    secondsPlayed: 0,\n    animals: []\n  };\n\n  componentDidMount() {\n    window.setInterval(this.tick, 1000);\n  }\n  \n  componentWillUnmount() {\n    window.clearInterval(this.tick);\n  }\n\n  handleRescue = (id, points) => {\n    this.props.incrementScore(points);\n    this.handleRemove(id);\n  }\n\n  handleRemove = (id) => {\n    this.setState(state => ({\n      animals: state.animals.filter(animal => animal.id !== id)\n    }));\n  }\n  \n  tick = () => {\n    if(!this.props.isPlaying) return;\n\n    this.setState(state => ({\n      secondsPlayed: ++state.secondsPlayed,\n      animals: [\n        ...state.animals,\n        {id: state.secondsPlayed, ...createRandomAnimal(this.props)}\n      ]\n    }));\n  }\n\n  render() {\n    return (\n      <Container isPlaying={this.props.isPlaying}>\n        {this.state.animals.map(animal => ( \n          <Animal\n            isPlaying={this.props.isPlaying}\n            speed={this.props.speed}\n            id={animal.id}\n            key={animal.id}\n            rescue={this.handleRescue}\n            remove={this.handleRemove}\n            {...animal}\n          />        \n        ))}\n      </Container>\n    );\n  }\n}\n","let pointsToSize = points => 100 - (points * 10) + 10;\nlet speedToDuration = (speed, distance) => distance / speed;\n\nexport {\n  pointsToSize,\n  speedToDuration\n}","import React from 'react';\nimport styled from 'react-emotion/macro';\n\nconst Cloud = styled.div`\n  font-size: 75px;\n  user-select: none;\n  position: absolute;\n  top: ${props => props.top}%;\n  left: ${props => props.left}%;\n`;\n\nconst Sun = styled.div`\n  font-size: 75px;\n  user-select: none;\n  position: absolute;\n  top: 5vw;\n  right: 5vw;\n`;\n\nconst Clouds = () => {\n  return new Array(Math.ceil(Math.random() * 5)).fill(null).map((cloud, i) => (\n    <Cloud\n      key={i}\n      top={Math.random() * 100}\n      left={Math.random() * 100}\n    >☁️</Cloud>\n  ));\n};\n\nconst Background =  React.memo(() => (\n  <div>\n    <Sun>☀️</Sun>\n    <Clouds />\n  </div>\n));\n \nexport default Background;","import React, { Component } from 'react';\nimport styled from 'react-emotion/macro';\n\nimport Controls from './Controls';\nimport Stage from './Stage';\nimport Background from './Background';\nimport { DEFAULT_SPEED } from '../constants';\n\nlet Container = styled.div`\n  height: 100%;\n  background: linear-gradient(to bottom, #2980b9, #6dd5fa, #ffffff);\n`;\n\nexport default class Game extends Component {\n  state = {\n    isPlaying: false,\n    speed: DEFAULT_SPEED,\n    score: 0\n  };\n\n  handleTogglePlay = () => {\n    this.setState(state => ({ isPlaying: !state.isPlaying }));\n  };\n\n  handleSetSpeed = speed => {\n    this.setState({speed});\n  };\n\n  incrementScore = points => {\n    this.setState(state => ({ score: state.score + points}));\n  };\n\n  render() {\n    return (\n      <Container>\n        <Background />\n        <Stage\n          isPlaying={this.state.isPlaying}\n          speed={this.state.speed}\n          incrementScore={this.incrementScore}\n        />\n        <Controls\n          isPlaying={this.state.isPlaying}\n          togglePlay={this.handleTogglePlay}\n          speed={this.state.speed}\n          setSpeed={this.handleSetSpeed}\n          score={this.state.score}\n        />\n      </Container>\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/Game';\nimport './global.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}